name: CI/CD Pipeline

# Déclenche le workflow à chaque push sur la branche principal
on:
  push:
    branches:
      - principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configure Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Étape 3 : Installe les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Étape 4 : Exécute les tests (optionnel)
      - name: Run tests
        run: |
          # Ajoutez ici des commandes pour exécuter vos tests (si vous en avez)
          echo "Aucun test configuré pour l'instant."

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Étape 1 : Checkout le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Déployer l'application (exemple avec Heroku)
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          # Installe Heroku CLI
          curl https://cli-assets.heroku.com/install.sh | sh
          # Déploie sur Heroku
          heroku container:login
          heroku container:push web --app $HEROKU_APP_NAME
          heroku container:release web --app $HEROKU_APP_NAME
